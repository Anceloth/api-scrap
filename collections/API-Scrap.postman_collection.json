{
	"info": {
		"_postman_id": "12345678-1234-1234-1234-123456789012",
		"name": "üöÄ API-Scrap - NestJS Hexagonal Architecture",
		"description": "Complete REST API collection for web scraping and authentication functionality built with NestJS, TypeScript, and PostgreSQL.\n\n## üîó Base URL\nLocal: `http://localhost:3000`\n\n## üîê Authentication\nMost endpoints require JWT token in Authorization header: `Bearer {{token}}`",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "12345678"
	},
	"item": [
		{
			"name": "üîê Authentication",
			"item": [
				{
					"name": "üìù Register User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 201) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.accessToken) {",
									"        pm.environment.set('token', responseJson.data.accessToken);",
									"        console.log('‚úÖ Token saved to environment');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"newuser\",\n  \"email\": \"newuser@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/register",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"register"
							]
						},
						"description": "Register a new user account. Returns user data and JWT token."
					},
					"response": []
				},
				{
					"name": "üîë Login User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const responseJson = pm.response.json();",
									"    if (responseJson.data && responseJson.data.accessToken) {",
									"        pm.environment.set('token', responseJson.data.accessToken);",
									"        console.log('‚úÖ Token saved to environment');",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"email\": \"admin@example.com\",\n  \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/auth/login",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"auth",
								"login"
							]
						},
						"description": "Authenticate user with email and password. Returns JWT token."
					},
					"response": []
				}
			],
			"description": "User authentication endpoints for registration and login."
		},
		{
			"name": "üï∑Ô∏è Web Scraping",
			"item": [
				{
					"name": "üîç Scrape URL",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							},
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"url\": \"https://www.w3schools.com\"\n}"
						},
						"url": {
							"raw": "{{baseUrl}}/scraping/scrape-url",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scraping",
								"scrape-url"
							]
						},
						"description": "Scrape all links from a given URL. Extracts and stores link data in the database."
					},
					"response": []
				},
				{
					"name": "üìã Get URLs (Default Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scraping/urls",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scraping",
								"urls"
							]
						},
						"description": "Get paginated list of scraped URLs with default pagination (page=1, limit=5)."
					},
					"response": []
				},
				{
					"name": "üìã Get URLs (Custom Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scraping/urls?page=2&limit=3",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scraping",
								"urls"
							],
							"query": [
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "3"
								}
							]
						},
						"description": "Get paginated list of scraped URLs with custom pagination parameters."
					},
					"response": []
				},
				{
					"name": "üîó Get Links by URL (Default)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scraping/links?url=https://www.w3schools.com",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scraping",
								"links"
							],
							"query": [
								{
									"key": "url",
									"value": "https://www.w3schools.com"
								}
							]
						},
						"description": "Get paginated links from a specific URL with default pagination (limit=10)."
					},
					"response": []
				},
				{
					"name": "üîó Get Links by URL (Custom Pagination)",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token}}"
							}
						],
						"url": {
							"raw": "{{baseUrl}}/scraping/links?url=https://www.w3schools.com&page=2&limit=5",
							"host": [
								"{{baseUrl}}"
							],
							"path": [
								"scraping",
								"links"
							],
							"query": [
								{
									"key": "url",
									"value": "https://www.w3schools.com"
								},
								{
									"key": "page",
									"value": "2"
								},
								{
									"key": "limit",
									"value": "5"
								}
							]
						},
						"description": "Get paginated links from a specific URL with custom pagination parameters."
					},
					"response": []
				}
			],
			"description": "Web scraping functionality endpoints for extracting and managing links from URLs."
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "baseUrl",
			"value": "http://localhost:3000",
			"type": "string"
		},
		{
			"key": "token",
			"value": "",
			"type": "string"
		}
	]
}
